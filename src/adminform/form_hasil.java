/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package adminform;

import Singletondatabase.DatabaseConnection;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Rahimsyah
 */
public class form_hasil extends javax.swing.JFrame {

    /**
     * Creates new form form_hasil
     */
    public form_hasil() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jhasil = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btnlayak = new javax.swing.JButton();
        btntidaklayak = new javax.swing.JButton();
        jpenjasan = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userformicon/icons8_back_24px_1.png"))); // NOI18N
        jButton2.setText("BACK");
        jButton2.setBorderPainted(false);
        jButton2.setContentAreaFilled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-20, 10, 120, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 150, 100));

        jPanel2.setBackground(new java.awt.Color(102, 204, 255));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("FORM_HASIL PROMETHEE");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("HASIL RANKING");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 626, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 0, 800, 100));

        jhasil.setBackground(new java.awt.Color(255, 255, 255));
        jhasil.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jhasil.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 30, 630, 337));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "001/001", "002/002", "003/003", "004/004", "005/005" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jhasil.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, 96, -1));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userformicon/icons8_print_24px.png"))); // NOI18N
        jButton1.setText("PRINT");
        jButton1.setContentAreaFilled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jhasil.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 330, -1, -1));

        jLabel2.setText("LIHAT RANKING RT/RW ");
        jhasil.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, -1, -1));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        btnlayak.setText("LAYAK");
        btnlayak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlayakActionPerformed(evt);
            }
        });

        btntidaklayak.setText("TIDAK LAYAK");
        btntidaklayak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntidaklayakActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnlayak, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btntidaklayak, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(btnlayak)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(btntidaklayak)
                .addContainerGap())
        );

        jhasil.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, 130, 80));

        jTabbedPane1.addTab("tab1", jhasil);

        jpenjasan.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jpenjasanLayout = new javax.swing.GroupLayout(jpenjasan);
        jpenjasan.setLayout(jpenjasanLayout);
        jpenjasanLayout.setHorizontalGroup(
            jpenjasanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 945, Short.MAX_VALUE)
        );
        jpenjasanLayout.setVerticalGroup(
            jpenjasanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 402, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("tab2", jpenjasan);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 950, 430));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        String ambil = (String) jComboBox1.getSelectedItem();
        if (ambil.equals("001/001")) {
            jLabel3.setText("RANGKING PENERIMA RT/RT (001/001)");
            String sql = "SELECT * FROM tb_hasilkosongsatu ORDER BY netflow DESC";
            DefaultTableModel df = new DefaultTableModel();
            df.addColumn("ID");
            df.addColumn("NAMA PENERIMA");
            df.addColumn("NETFLOW");
            df.addColumn("RT/RW");
            df.addColumn("RANGKING");
            jTable1.setModel(df);
            try {
                int i = 1;
                java.sql.Connection con = DatabaseConnection.getConnection();
                java.sql.Statement st = con.createStatement();
                java.sql.ResultSet RS = st.executeQuery(sql);
                while (RS.next()) {
                    df.addRow(new Object[]{
                        RS.getString(1),
                        RS.getString(2),
                        RS.getString(3),
                        RS.getString(4),
                        i++
                    });
                }
            } catch (SQLException e) {
            }
        } else if (ambil.equals("002/002")) {
            jLabel3.setText("RANGKING PENERIMA RT/RT (002/002)");
            String sql = "SELECT * FROM tb_hasilkosongdua ORDER BY netflow DESC";
            DefaultTableModel df = new DefaultTableModel();
            df.addColumn("ID");
            df.addColumn("NAMA PENERIMA");
            df.addColumn("NETFLOW");
            df.addColumn("RT/RW");
            df.addColumn("RANGKING");
            jTable1.setModel(df);
            try {
                int i = 1;
                java.sql.Connection con = DatabaseConnection.getConnection();
                java.sql.Statement st = con.createStatement();
                java.sql.ResultSet RS = st.executeQuery(sql);
                while (RS.next()) {
                    df.addRow(new Object[]{
                        RS.getString(1),
                        RS.getString(2),
                        RS.getString(3),
                        RS.getString(4),
                        i++
                    });
                }
            } catch (SQLException e) {
            }

        } else if (ambil.equals("003/003")) {
            jLabel3.setText("RANGKING PENERIMA RT/RT (003/003)");
            String sql = "SELECT * FROM tb_hasilkosongtiga ORDER BY netflow DESC";
            DefaultTableModel df = new DefaultTableModel();
            df.addColumn("ID");
            df.addColumn("NAMA PENERIMA");
            df.addColumn("NETFLOW");
            df.addColumn("RT/RW");
            df.addColumn("RANGKING");
            jTable1.setModel(df);
            try {
                int i = 1;
                java.sql.Connection con = DatabaseConnection.getConnection();
                java.sql.Statement st = con.createStatement();
                java.sql.ResultSet RS = st.executeQuery(sql);
                while (RS.next()) {
                    df.addRow(new Object[]{
                        RS.getString(1),
                        RS.getString(2),
                        RS.getString(3),
                        RS.getString(4),
                        i++
                    });
                }
            } catch (SQLException e) {
            }
        } else if (ambil.equals("004/004")) {
            jLabel3.setText("RANGKING PENERIMA RT/RT (004/004)");
            String sql = "SELECT * FROM tb_hasilkosongempat ORDER BY netflow DESC";
            DefaultTableModel df = new DefaultTableModel();
            df.addColumn("ID");
            df.addColumn("NAMA PENERIMA");
            df.addColumn("NETFLOW");
            df.addColumn("RT/RW");
            df.addColumn("RANGKING");
            jTable1.setModel(df);
            try {
                int i = 1;
                java.sql.Connection con = DatabaseConnection.getConnection();
                java.sql.Statement st = con.createStatement();
                java.sql.ResultSet RS = st.executeQuery(sql);
                while (RS.next()) {
                    df.addRow(new Object[]{
                        RS.getString(1),
                        RS.getString(2),
                        RS.getString(3),
                        RS.getString(4),
                        i++
                    });
                }
            } catch (SQLException e) {
            }
        } else if (ambil.equals("005/005")) {
            jLabel3.setText("RANGKING PENERIMA RT/RT (005/005)");
            String sql = "SELECT * FROM tb_hasilkosonglima ORDER BY netflow DESC";
            DefaultTableModel df = new DefaultTableModel();
            df.addColumn("ID");
            df.addColumn("NAMA PENERIMA");
            df.addColumn("NETFLOW");
            df.addColumn("RT/RW");
            df.addColumn("RANGKING");
            jTable1.setModel(df);
            try {
                int i = 1;
                java.sql.Connection con = DatabaseConnection.getConnection();
                java.sql.Statement st = con.createStatement();
                java.sql.ResultSet RS = st.executeQuery(sql);
                while (RS.next()) {
                    df.addRow(new Object[]{
                        RS.getString(1),
                        RS.getString(2),
                        RS.getString(3),
                        RS.getString(4),
                        i++
                    });
                }
            } catch (SQLException e) {
            }
        } else {
            JOptionPane.showMessageDialog(null, "TIDAK ADA PILIHAN");
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Admindashboard user = new Admindashboard();
        user.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnlayakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlayakActionPerformed
        String ambil = (String) jComboBox1.getSelectedItem();
        if (ambil.equals("001/001")) {
            jLabel3.setText("PENERIMA YANG LAYAK RT/RT (001/001)");
            String sql = "SELECT * FROM tb_hasilkosongsatu ORDER BY netflow DESC LIMIT 1,5";
            DefaultTableModel df = new DefaultTableModel();
            df.addColumn("NAMA PENERIMA LAYAK");
            df.addColumn("NETFLOW");
            df.addColumn("RT/RW");
            jTable1.setModel(df);
            try {
                java.sql.Connection con = DatabaseConnection.getConnection();
                java.sql.Statement st = con.createStatement();
                java.sql.ResultSet rs = st.executeQuery(sql);
                while (rs.next()) {
                    df.addRow(new Object[]{
                        rs.getString(2),
                        rs.getDouble(3),
                        rs.getString(4)
                    });
                }
            } catch (SQLException ex) {
                Logger.getLogger(form_hasil.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else if (ambil.equals("002/002")) {
            jLabel3.setText("PENERIMA YANG LAYAK RT/RT (002/002)");
            String sql = "SELECT * FROM tb_hasilkosongdua ORDER BY netflow DESC LIMIT 1,5";
            DefaultTableModel df = new DefaultTableModel();
            df.addColumn("NAMA PENERIMA LAYAK");
            df.addColumn("NETFLOW");
            df.addColumn("RT/RW");
            jTable1.setModel(df);
            try {
                java.sql.Connection con = DatabaseConnection.getConnection();
                java.sql.Statement st = con.createStatement();
                java.sql.ResultSet rs = st.executeQuery(sql);
                while (rs.next()) {
                    df.addRow(new Object[]{
                        rs.getString(2),
                        rs.getDouble(3),
                        rs.getString(4)
                    });
                }
            } catch (SQLException ex) {
                Logger.getLogger(form_hasil.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (ambil.equals("003/003")) {
            jLabel3.setText("PENERIMA YANG LAYAK RT/RT (003/003)");
            String sql = "SELECT * FROM tb_hasilkosongtiga ORDER BY netflow DESC LIMIT 1,5";
            DefaultTableModel df = new DefaultTableModel();
            df.addColumn("NAMA PENERIMA LAYAK");
            df.addColumn("NETFLOW");
            df.addColumn("RT/RW");
            jTable1.setModel(df);
            try {
                java.sql.Connection con = DatabaseConnection.getConnection();
                java.sql.Statement st = con.createStatement();
                java.sql.ResultSet rs = st.executeQuery(sql);
                while (rs.next()) {
                    df.addRow(new Object[]{
                        rs.getString(2),
                        rs.getDouble(3),
                        rs.getString(4)
                    });
                }
            } catch (SQLException ex) {
                Logger.getLogger(form_hasil.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (ambil.equals("004/004")) {
            jLabel3.setText("PENERIMA YANG LAYAK RT/RT (004/004)");
            String sql = "SELECT * FROM tb_hasilkosongempat ORDER BY netflow DESC LIMIT 1,5";
            DefaultTableModel df = new DefaultTableModel();
            df.addColumn("NAMA PENERIMA LAYAK");
            df.addColumn("NETFLOW");
            df.addColumn("RT/RW");
            jTable1.setModel(df);
            try {
                java.sql.Connection con = DatabaseConnection.getConnection();
                java.sql.Statement st = con.createStatement();
                java.sql.ResultSet rs = st.executeQuery(sql);
                while (rs.next()) {
                    df.addRow(new Object[]{
                        rs.getString(2),
                        rs.getDouble(3),
                        rs.getString(4)
                    });
                }
            } catch (SQLException ex) {
                Logger.getLogger(form_hasil.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (ambil.equals("005/005")) {
            jLabel3.setText("PENERIMA YANG LAYAK RT/RT (005/005)");
            String sql = "SELECT * FROM tb_hasilkosonglima ORDER BY netflow DESC LIMIT 1,5";
            DefaultTableModel df = new DefaultTableModel();
            df.addColumn("NAMA PENERIMA LAYAK");
            df.addColumn("NETFLOW");
            df.addColumn("RT/RW");
            jTable1.setModel(df);
            try {
                java.sql.Connection con = DatabaseConnection.getConnection();
                java.sql.Statement st = con.createStatement();
                java.sql.ResultSet rs = st.executeQuery(sql);
                while (rs.next()) {
                    df.addRow(new Object[]{
                        rs.getString(2),
                        rs.getDouble(3),
                        rs.getString(4)
                    });
                }
            } catch (SQLException ex) {
                Logger.getLogger(form_hasil.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnlayakActionPerformed

    private void btntidaklayakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntidaklayakActionPerformed
        String ambil = (String) jComboBox1.getSelectedItem();
        if (ambil.equals("001/001")) {
            jLabel3.setText("PENERIMA YANG TIDAK LAYAK RT/RT (001/001)");
            String sql = "SELECT * FROM tb_hasilkosongsatu ORDER BY netflow DESC LIMIT 5,10";
            DefaultTableModel df = new DefaultTableModel();
            df.addColumn("NAMA PENERIMA LAYAK");
            df.addColumn("NETFLOW");
            df.addColumn("RT/RW");
            jTable1.setModel(df);
            try {
                java.sql.Connection con = DatabaseConnection.getConnection();
                java.sql.Statement st = con.createStatement();
                java.sql.ResultSet rs = st.executeQuery(sql);
                while (rs.next()) {
                    df.addRow(new Object[]{
                        rs.getString(2),
                        rs.getDouble(3),
                        rs.getString(4)
                    });
                }
            } catch (SQLException ex) {
                Logger.getLogger(form_hasil.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else if (ambil.equals("002/002")) {
            jLabel3.setText("PENERIMA YANG TIDAK LAYAK RT/RT (002/002)");
            String sql = "SELECT * FROM tb_hasilkosongdua ORDER BY netflow DESC LIMIT 5,10";
            DefaultTableModel df = new DefaultTableModel();
            df.addColumn("NAMA PENERIMA LAYAK");
            df.addColumn("NETFLOW");
            df.addColumn("RT/RW");
            jTable1.setModel(df);
            try {
                java.sql.Connection con = DatabaseConnection.getConnection();
                java.sql.Statement st = con.createStatement();
                java.sql.ResultSet rs = st.executeQuery(sql);
                while (rs.next()) {
                    df.addRow(new Object[]{
                        rs.getString(2),
                        rs.getDouble(3),
                        rs.getString(4)
                    });
                }
            } catch (SQLException ex) {
                Logger.getLogger(form_hasil.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (ambil.equals("003/003")) {
            jLabel3.setText("PENERIMA YANG TIDAK LAYAK RT/RT (003/003)");
            String sql = "SELECT * FROM tb_hasilkosongtiga ORDER BY netflow DESC LIMIT 5,10";
            DefaultTableModel df = new DefaultTableModel();
            df.addColumn("NAMA PENERIMA LAYAK");
            df.addColumn("NETFLOW");
            df.addColumn("RT/RW");
            jTable1.setModel(df);
            try {
                java.sql.Connection con = DatabaseConnection.getConnection();
                java.sql.Statement st = con.createStatement();
                java.sql.ResultSet rs = st.executeQuery(sql);
                while (rs.next()) {
                    df.addRow(new Object[]{
                        rs.getString(2),
                        rs.getDouble(3),
                        rs.getString(4)
                    });
                }
            } catch (SQLException ex) {
                Logger.getLogger(form_hasil.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (ambil.equals("004/004")) {
            jLabel3.setText("PENERIMA YANG TIDAK LAYAK RT/RT (004/004)");
            String sql = "SELECT * FROM tb_hasilkosongempat ORDER BY netflow DESC LIMIT 5,10";
            DefaultTableModel df = new DefaultTableModel();
            df.addColumn("NAMA PENERIMA LAYAK");
            df.addColumn("NETFLOW");
            df.addColumn("RT/RW");
            jTable1.setModel(df);
            try {
                java.sql.Connection con = DatabaseConnection.getConnection();
                java.sql.Statement st = con.createStatement();
                java.sql.ResultSet rs = st.executeQuery(sql);
                while (rs.next()) {
                    df.addRow(new Object[]{
                        rs.getString(2),
                        rs.getDouble(3),
                        rs.getString(4)
                    });
                }
            } catch (SQLException ex) {
                Logger.getLogger(form_hasil.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (ambil.equals("005/005")) {
            jLabel3.setText("PENERIMA YANG TIDAK LAYAK RT/RT (005/005)");
            String sql = "SELECT * FROM tb_hasilkosonglima ORDER BY netflow DESC LIMIT 5,10";
            DefaultTableModel df = new DefaultTableModel();
            df.addColumn("NAMA PENERIMA LAYAK");
            df.addColumn("NETFLOW");
            df.addColumn("RT/RW");
            jTable1.setModel(df);
            try {
                java.sql.Connection con = DatabaseConnection.getConnection();
                java.sql.Statement st = con.createStatement();
                java.sql.ResultSet rs = st.executeQuery(sql);
                while (rs.next()) {
                    df.addRow(new Object[]{
                        rs.getString(2),
                        rs.getDouble(3),
                        rs.getString(4)
                    });
                }
            } catch (SQLException ex) {
                Logger.getLogger(form_hasil.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btntidaklayakActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String ambil = (String) jComboBox1.getSelectedItem();
        if (ambil.equals("001/001")) {
            JasperReport reports;
            String patch = ".\\src\\fileku\\laporanhasil001.jasper";
            java.sql.Connection con = DatabaseConnection.getConnection();
            try {
                reports = (JasperReport) JRLoader.loadObjectFromFile(patch);
                JasperPrint jsprint = JasperFillManager.fillReport(patch, null, con);
                JasperViewer jviwer = new JasperViewer(jsprint, false);
                jviwer.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
                jviwer.setVisible(true);
            } catch (JRException e) {
                JOptionPane.showMessageDialog(null, "DATA BELUM ADA");
            }

        }
        else if (ambil.equals("002/002")) {
            JasperReport reports;
            String patch = ".\\src\\fileku\\laporanhasil002.jasper";
            java.sql.Connection con = DatabaseConnection.getConnection();
            try {
                reports = (JasperReport) JRLoader.loadObjectFromFile(patch);
                JasperPrint jsprint = JasperFillManager.fillReport(patch, null, con);
                JasperViewer jviwer = new JasperViewer(jsprint, false);
                jviwer.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
                jviwer.setVisible(true);
            } catch (JRException e) {
                JOptionPane.showMessageDialog(null, "DATA BELUM ADA");
            }

        }else if (ambil.equals("003/003")){
        JasperReport reports;
        String patch = ".\\src\\fileku\\laporanhasil003.jasper";
        java.sql.Connection con = DatabaseConnection.getConnection();
            try {
                reports = (JasperReport) JRLoader.loadObjectFromFile(patch);
                JasperPrint jsprint = JasperFillManager.fillReport(patch, null, con);
                JasperViewer jviwer = new JasperViewer(jsprint,false);
                jviwer.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
                jviwer.setVisible(true);
            } catch (JRException e) {
                JOptionPane.showMessageDialog(null, "DATA BELUM ADA");
            }
        }else if (ambil.equals("004/004")){
        JasperReport reports;
        String patch = ".\\src\\fileku\\laporanhasil004.jasper";
        java.sql.Connection con = DatabaseConnection.getConnection();
            try {
                reports = (JasperReport) JRLoader.loadObjectFromFile(patch);
                JasperPrint jsprint = JasperFillManager.fillReport(patch, null, con);
                JasperViewer jviwer = new JasperViewer(jsprint,false);
                jviwer.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
                jviwer.setVisible(true);
            } catch (JRException e) {
                JOptionPane.showMessageDialog(null, "DATA BELUM ADA");
            }
        }else if (ambil.equals("005/005")){
        JasperReport reports;
        String patch = ".\\src\\fileku\\laporanhasil005.jasper";
        java.sql.Connection con = DatabaseConnection.getConnection();
            try {
                reports = (JasperReport) JRLoader.loadObjectFromFile(patch);
                JasperPrint jsprint = JasperFillManager.fillReport(patch, null, con);
                JasperViewer jviwer = new JasperViewer(jsprint,false);
                jviwer.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
                jviwer.setVisible(true);
            } catch (JRException e) {
                JOptionPane.showMessageDialog(null, "DATA BELUM ADA");
            }
        }else{
        JOptionPane.showMessageDialog(null, "TIDAK ADA PILIHAN");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(form_hasil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(form_hasil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(form_hasil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(form_hasil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new form_hasil().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnlayak;
    private javax.swing.JButton btntidaklayak;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JPanel jhasil;
    private javax.swing.JPanel jpenjasan;
    // End of variables declaration//GEN-END:variables
}
